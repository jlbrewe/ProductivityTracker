{"ast":null,"code":"var _jsxFileName = \"/Users/jlbrewe/Desktop/my-app/src/Stopwatch.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport StopwatchDisplay from './StopwatchDisplay.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formatTime = (val, ...rest) => {\n      let value = val.toString();\n\n      if (value.length < 2) {\n        value = '0' + value;\n      }\n\n      if (rest[0] === 'ms' && value.length < 3) {\n        value = '0' + value;\n      }\n\n      return value;\n    };\n\n    this.start = () => {\n      if (!this.state.running) {\n        this.setState({\n          running: true\n        });\n        this.watch = setInterval(() => this.pace(), 10);\n      }\n    };\n\n    this.stop = () => {\n      this.setState({\n        running: false\n      });\n      clearInterval(this.watch);\n    };\n\n    this.pace = () => {\n      this.setState({\n        currentTimeMs: this.state.currentTimeMs + 10\n      });\n\n      if (this.state.currentTimeMs >= 1000) {\n        this.setState({\n          currentTimeSec: this.state.currentTimeSec + 1\n        });\n        this.setState({\n          currentTimeMs: 0\n        });\n      }\n\n      if (this.state.currentTimeSec >= 60) {\n        this.setState({\n          currentTimeMin: this.state.currentTimeMin + 1\n        });\n        this.setState({\n          currentTimeSec: 0\n        });\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        currentTimeMs: 0,\n        currentTimeSec: 0,\n        currentTimeMin: 0\n      });\n    };\n\n    this.state = {\n      running: false,\n      currentTimeMs: 0,\n      currentTimeSec: 0,\n      currentTimeMin: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'stopwatch',\n      children: [/*#__PURE__*/_jsxDEV(StopwatchDisplay, {\n        ref: \"display\",\n        ...this.state,\n        formatTime: this.formatTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), this.state.running === false && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.start,\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), this.state.running === true && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stop,\n        children: \"STOP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.reset,\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/jlbrewe/Desktop/my-app/src/Stopwatch.jsx"],"names":["React","ReactDOM","StopwatchDisplay","Stopwatch","Component","constructor","props","formatTime","val","rest","value","toString","length","start","state","running","setState","watch","setInterval","pace","stop","clearInterval","currentTimeMs","currentTimeSec","currentTimeMin","reset","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;;;AAGA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,UAXmB,GAWN,CAACC,GAAD,EAAM,GAAGC,IAAT,KAAkB;AAC7B,UAAIC,KAAK,GAAGF,GAAG,CAACG,QAAJ,EAAZ;;AACA,UAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpBF,QAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;;AACD,UAAID,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,IAAoBC,KAAK,CAACE,MAAN,GAAe,CAAvC,EAA0C;AACxCF,QAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;;AACD,aAAOA,KAAP;AACD,KApBkB;;AAAA,SAsBnBG,KAtBmB,GAsBX,MAAM;AACZ,UAAI,CAAC,KAAKC,KAAL,CAAWC,OAAhB,EAAyB;AACvB,aAAKC,QAAL,CAAc;AAAED,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,aAAKE,KAAL,GAAaC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,EAApB,CAAxB;AACD;AACF,KA3BkB;;AAAA,SA6BnBC,IA7BmB,GA6BZ,MAAM;AACX,WAAKJ,QAAL,CAAc;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAM,MAAAA,aAAa,CAAC,KAAKJ,KAAN,CAAb;AACD,KAhCkB;;AAAA,SAkCnBE,IAlCmB,GAkCZ,MAAM;AACX,WAAKH,QAAL,CAAc;AAAEM,QAAAA,aAAa,EAAE,KAAKR,KAAL,CAAWQ,aAAX,GAA2B;AAA5C,OAAd;;AACA,UAAI,KAAKR,KAAL,CAAWQ,aAAX,IAA4B,IAAhC,EAAsC;AACpC,aAAKN,QAAL,CAAc;AAAEO,UAAAA,cAAc,EAAE,KAAKT,KAAL,CAAWS,cAAX,GAA4B;AAA9C,SAAd;AACA,aAAKP,QAAL,CAAc;AAAEM,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD;;AACD,UAAI,KAAKR,KAAL,CAAWS,cAAX,IAA6B,EAAjC,EAAqC;AACnC,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,cAAc,EAAE,KAAKV,KAAL,CAAWU,cAAX,GAA4B;AAA9C,SAAd;AACA,aAAKR,QAAL,CAAc;AAAEO,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACD;AACF,KA5CkB;;AAAA,SA8CnBE,KA9CmB,GA8CX,MAAM;AACZ,WAAKT,QAAL,CAAc;AACZM,QAAAA,aAAa,EAAE,CADH;AAEZC,QAAAA,cAAc,EAAE,CAFJ;AAGZC,QAAAA,cAAc,EAAE;AAHJ,OAAd;AAKD,KApDkB;;AAGjB,SAAKV,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXO,MAAAA,aAAa,EAAE,CAFJ;AAGXC,MAAAA,cAAc,EAAE,CAHL;AAIXC,MAAAA,cAAc,EAAE;AAJL,KAAb;AAMD;;AA6CDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,8BACE,QAAC,gBAAD;AACE,QAAA,GAAG,EAAC,SADN;AAAA,WAEM,KAAKZ,KAFX;AAGE,QAAA,UAAU,EAAE,KAAKP;AAHnB;AAAA;AAAA;AAAA;AAAA,cADF,EAMG,KAAKO,KAAL,CAAWC,OAAX,KAAuB,KAAvB,iBACC;AAAQ,QAAA,OAAO,EAAE,KAAKF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EASG,KAAKC,KAAL,CAAWC,OAAX,KAAuB,IAAvB,iBACC;AAAQ,QAAA,OAAO,EAAE,KAAKK,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAYE;AAAQ,QAAA,OAAO,EAAE,KAAKK,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA1EqC;;AA6ExC,eAAetB,SAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StopwatchDisplay from './StopwatchDisplay.jsx';\n\n\nclass Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      running: false,\n      currentTimeMs: 0,\n      currentTimeSec: 0,\n      currentTimeMin: 0,\n    };\n  }\n\n  formatTime = (val, ...rest) => {\n    let value = val.toString();\n    if (value.length < 2) {\n      value = '0' + value;\n    }\n    if (rest[0] === 'ms' && value.length < 3) {\n      value = '0' + value;\n    }\n    return value;\n  };\n\n  start = () => {\n    if (!this.state.running) {\n      this.setState({ running: true });\n      this.watch = setInterval(() => this.pace(), 10);\n    }\n  };\n\n  stop = () => {\n    this.setState({ running: false });\n    clearInterval(this.watch);\n  };\n\n  pace = () => {\n    this.setState({ currentTimeMs: this.state.currentTimeMs + 10 });\n    if (this.state.currentTimeMs >= 1000) {\n      this.setState({ currentTimeSec: this.state.currentTimeSec + 1 });\n      this.setState({ currentTimeMs: 0 });\n    }\n    if (this.state.currentTimeSec >= 60) {\n      this.setState({ currentTimeMin: this.state.currentTimeMin + 1 });\n      this.setState({ currentTimeSec: 0 });\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      currentTimeMs: 0,\n      currentTimeSec: 0,\n      currentTimeMin: 0,\n    });\n  };\n\n  render() {\n    return (\n      <div className={'stopwatch'}>\n        <StopwatchDisplay\n          ref=\"display\"\n          {...this.state}\n          formatTime={this.formatTime}\n        />\n        {this.state.running === false && (\n          <button onClick={this.start}>START</button>\n        )}\n        {this.state.running === true && (\n          <button onClick={this.stop}>STOP</button>\n        )}\n        <button onClick={this.reset}>RESET</button>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}