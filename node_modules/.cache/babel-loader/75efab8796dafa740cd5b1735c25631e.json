{"ast":null,"code":"var _jsxFileName = \"/Users/jlbrewe/Desktop/my-app/src/Countdown.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Countdown extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Countdown ended\");\n        }\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n\n    this.adjustTimer = input => {\n      const {\n        timerTime,\n        timerOn\n      } = this.state;\n\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 3600000 < 216000000) {\n          this.setState({\n            timerTime: timerTime + 3600000\n          });\n        } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerTime + 60000 < 216000000) {\n          this.setState({\n            timerTime: timerTime + 60000\n          });\n        } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 60000\n          });\n        } else if (input === \"incSeconds\" && timerTime + 1000 < 216000000) {\n          this.setState({\n            timerTime: timerTime + 1000\n          });\n        } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 1000\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      timerTime,\n      timerStart,\n      timerOn\n    } = this.state;\n    let seconds = (\"0\" + Math.floor(timerTime / 1000 % 60) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000 % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000 % 60)).slice(-2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Countdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-header\",\n        children: \"Countdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-label\",\n        children: \"Hours : Minutes : Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incHours\"),\n          children: \"\\u21E7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incMinutes\"),\n          children: \"\\u21E7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incSeconds\"),\n          children: \"\\u21E7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Countdown-time\",\n          children: [hours, \" : \", minutes, \" : \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decHours\"),\n          children: \"\\u21E9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decMinutes\"),\n          children: \"\\u21E9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decSeconds\"),\n          children: \"\\u21E9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), timerOn === false && (timerStart === 0 || timerTime === timerStart) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-start\",\n        onClick: this.startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), timerOn === true && timerTime >= 1000 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-stop\",\n        onClick: this.stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), timerOn === false && timerStart !== 0 && timerStart !== timerTime && timerTime !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-start\",\n        onClick: this.startTimer,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), (timerOn === false || timerTime < 1000) && timerStart !== timerTime && timerStart > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-reset\",\n        onClick: this.resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/jlbrewe/Desktop/my-app/src/Countdown.js"],"names":["React","Component","Countdown","state","timerOn","timerStart","timerTime","startTimer","setState","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","render","seconds","Math","floor","slice","minutes","hours"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Countdown extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0\n  };\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      const newTime = this.state.timerTime - 10;\n      if (newTime >= 0) {\n        this.setState({\n          timerTime: newTime\n        });\n      } else {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n        alert(\"Countdown ended\");\n      }\n    }, 10);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false });\n  };\n  resetTimer = () => {\n    if (this.state.timerOn === false) {\n      this.setState({\n        timerTime: this.state.timerStart\n      });\n    }\n  };\n\n  adjustTimer = input => {\n    const { timerTime, timerOn } = this.state;\n    if (!timerOn) {\n      if (input === \"incHours\" && timerTime + 3600000 < 216000000) {\n        this.setState({ timerTime: timerTime + 3600000 });\n      } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n        this.setState({ timerTime: timerTime - 3600000 });\n      } else if (input === \"incMinutes\" && timerTime + 60000 < 216000000) {\n        this.setState({ timerTime: timerTime + 60000 });\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n        this.setState({ timerTime: timerTime - 60000 });\n      } else if (input === \"incSeconds\" && timerTime + 1000 < 216000000) {\n        this.setState({ timerTime: timerTime + 1000 });\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n        this.setState({ timerTime: timerTime - 1000 });\n      }\n    }\n  };\n\n  render() {\n    const { timerTime, timerStart, timerOn } = this.state;\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\n\n    return (\n      <div className=\"Countdown\">\n        <div className=\"Countdown-header\">Countdown</div>\n        <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\n        <div className=\"Countdown-display\">\n          <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>\n          <button onClick={() => this.adjustTimer(\"incMinutes\")}>\n            &#8679;\n          </button>\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>\n            &#8679;\n          </button>\n\n          <div className=\"Countdown-time\">\n            {hours} : {minutes} : {seconds}\n          </div>\n\n          <button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>\n            &#8681;\n          </button>\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>\n            &#8681;\n          </button>\n        </div>\n\n        {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\n          <button className=\"Button-start\" onClick={this.startTimer}>\n            Start\n          </button>\n        )}\n        {timerOn === true && timerTime >= 1000 && (\n          <button className=\"Button-stop\" onClick={this.stopTimer}>\n            Stop\n          </button>\n        )}\n        {timerOn === false &&\n          (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n            <button className=\"Button-start\" onClick={this.startTimer}>\n              Resume\n            </button>\n          )}\n\n        {(timerOn === false || timerTime < 1000) &&\n          (timerStart !== timerTime && timerStart > 0) && (\n            <button className=\"Button-reset\" onClick={this.resetTimer}>\n              Reset\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}